<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--启用spring的一些annotation -->
    <context:annotation-config/>
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.example.*"/>

    <!-- 拦截所有请求-->
    <mvc:interceptors>
        <bean class="com.example.handler.RequestHandlerInterceptorAdapter"/>
        <bean class="com.example.handler.LoginValidHandlerInterceptorAdapter"/>
    </mvc:interceptors>

    <!--统一异常处理 -->
    <bean id="appExceptionHandler" class="com.example.handler.AppExecptionHandlerResolver"/>
    <!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error/error</prop>
                <prop key="java.lang.Throwable">error/error</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="errors/error">500</prop>
                <prop key="errors/404">404</prop>
            </props>
        </property>
        &lt;!&ndash; 设置日志输出级别，不定义则默认不输出警告等错误日志信息 &ndash;&gt;
        <property name="warnLogCategory" value="WARN"/>
        &lt;!&ndash; 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 &ndash;&gt;
        <property name="defaultErrorView" value="errors/error"/>
        &lt;!&ndash; 默认HTTP状态码 &ndash;&gt;
        <property name="defaultStatusCode" value="500"/>
    </bean>-->

    <!-- 统一响应数据处理 -->
    <mvc:annotation-driven>
        <!-- 统一响应数据封装处理 -->
        <mvc:return-value-handlers>
            <bean name="responseBodyProssor" class="com.example.handler.ResponseBodyProssor"/>
        </mvc:return-value-handlers>
        <!-- 统一入参处理 -->
        <mvc:argument-resolvers>
            <bean name="methodArgumentResolver" class="com.example.handler.MethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    <!-- json 数据转换-->
    <bean name="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
    </bean>

    <bean name="fastJsonHttpMessageConverter4"
          class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
        <property name="fastJsonConfig" ref="fastJsonConfig"/>
    </bean>
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/ -->
        <property name="prefix" value="/WEB-INF/views/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
    </bean>
</beans>